@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model IEnumerable<KnowledgePool.Models.Card>

@using System.Linq
@using System.Text.Json

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "Data Viewer";
}

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script type="text/javascript">
        const powerDataChart = document.getElementById("powerData");
        const powerChartJson = JSON.parse('@Html.Raw(ViewData["PowerData"])');
        const powerChart = new Chart(powerDataChart, powerChartJson);

        const toughnessDataChart = document.getElementById("toughnessData");
        const toughnessChartJson = JSON.parse('@Html.Raw(ViewData["ToughnessData"])');
        const toughnessChart = new Chart(toughnessDataChart, toughnessChartJson);

        const scatterPlotCanvas = document.getElementById("scatter");
        const scatterPlotJson = JSON.parse('@Html.Raw(ViewData["ScatterData"])');
        const scatterPlot = new Chart(scatterPlotCanvas, scatterPlotJson);

        scatterPlot.options.plugins.beforeDraw = chart => {
            chart.getDatasetMeta(0).data.forEach(v => {
                v.options.radius *= 5;
                v.options.hoverRadius = v.options.radius;
            });
        }

        scatterPlot.update();

        function toggleData(elem) {
            const index = parseInt(elem.id[1]);
            var plot;

            if (elem.id[0] === "p") plot = powerChart;
            else if (elem.id[0] === "t") plot = toughnessChart;
            else if (elem.id[0] === "s") plot = scatterPlot

            const currentVisibility = plot.data.datasets[index].hidden;

            plot.data.datasets[index].hidden = !currentVisibility;
            plot.update();
        }
    </script>
}

<h2>Set Search</h2>
<p>
    @using (Html.BeginForm("Index", "DataViewer", FormMethod.Get))
    {
        <p>
            Set: @Html.DropDownList("setList")
            <input type="radio" name="dataType" value="Average" checked="checked" /> Average
            <input type="radio" name="dataType" value="Median" /> Median
            <input type="submit" value="Submit">

            <br>
            Set Name: @Html.TextBox("searchString")
            <input type="submit" value="Filter">
        </p>
    }
</p>

@{
    var creatureCounts = ViewData["CreatureCounts"] as IDictionary<Tuple<string, int>, int>;
    var averages = ViewData["CardAverages"] as IDictionary<Tuple<string, int>, Tuple<double, double>>;
    var medians = ViewData["CardMedians"] as IDictionary<Tuple<string, int>, Tuple<int, int>>;

    var colorKeys = new List<string> { "W", "U", "B", "R", "G", "M", "C", "O" };
}


<div>
    <canvas id="powerData"></canvas>
    <div>
        <a id="p0" class="chart-action" onclick="toggleData(this)">Toggle White</a>
        <a id="p1" class="chart-action" onclick="toggleData(this)">Toggle Blue</a>
        <a id="p2" class="chart-action" onclick="toggleData(this)">Toggle Black</a>
        <a id="p3" class="chart-action" onclick="toggleData(this)">Toggle Red</a>
        <a id="p4" class="chart-action" onclick="toggleData(this)">Toggle Green</a>
        <a id="p5" class="chart-action" onclick="toggleData(this)">Toggle Gold</a>
        <a id="p6" class="chart-action" onclick="toggleData(this)">Toggle Colorless</a>
        <a id="p7" class="chart-action" onclick="toggleData(this)">Toggle Overall</a>
    </div>
</div>

<br /><br /><br />

<div>
    <canvas id="toughnessData"></canvas>
    <div>
        <a id="t0" class="chart-action" onclick="toggleData(this)">Toggle White</a>
        <a id="t1" class="chart-action" onclick="toggleData(this)">Toggle Blue</a>
        <a id="t2" class="chart-action" onclick="toggleData(this)">Toggle Black</a>
        <a id="t3" class="chart-action" onclick="toggleData(this)">Toggle Red</a>
        <a id="t4" class="chart-action" onclick="toggleData(this)">Toggle Green</a>
        <a id="t5" class="chart-action" onclick="toggleData(this)">Toggle Gold</a>
        <a id="t6" class="chart-action" onclick="toggleData(this)">Toggle Colorless</a>
        <a id="t7" class="chart-action" onclick="toggleData(this)">Toggle Overall</a>
    </div>
</div>

<br />
<br />
<br />

<div>
    <canvas id="scatter"></canvas>
    <div>
        <a id="s0" class="chart-action" onclick="toggleData(this)">Toggle White</a>
        <a id="s1" class="chart-action" onclick="toggleData(this)">Toggle Blue</a>
        <a id="s2" class="chart-action" onclick="toggleData(this)">Toggle Black</a>
        <a id="s3" class="chart-action" onclick="toggleData(this)">Toggle Red</a>
        <a id="s4" class="chart-action" onclick="toggleData(this)">Toggle Green</a>
        <a id="s5" class="chart-action" onclick="toggleData(this)">Toggle Gold</a>
        <a id="s6" class="chart-action" onclick="toggleData(this)">Toggle Colorless</a>
        <a id="s7" class="chart-action" onclick="toggleData(this)">Toggle Overall</a>
    </div>
</div>
    
